[{"content":"Cloud Native ","date":"2024-10-13","id":0,"permalink":"/en/cloud/readme/","summary":"\u003ch2 id=\"cloud-native\"\u003eCloud Native\u003c/h2\u003e","tags":[],"title":"README"},{"content":"WHY K8S In micro services, there are tons of container need to be host. We can\u0026rsquo;t do this by home make script and tools. So we need a container Orchestration tool. That is Kubernetes which offers the following features.\nHigh Availability or no downtime. Scalability or high performance. Disaster recovery - backup and restore. Components Pod Service Ingress Volumes StatefulSet Deployment ConfigMap Secrets Concepts Node Physical or virtual machine Pod Smallest unit of K8S. A layer of abstraction on containers. Pod can have many container(e.g. sidecar). No need to interact with specific container tech. (e.g. docker) Only interact with kubernetes layer. Each pod gets its own IP address. New IP address on re-creation. Container Isolated runtime environment. Tech: Docker/Podman/CRI-O/LXC. Service Permanent IP address (Endpoint). Pods communicate with each other using a service. Lifecycle of Pod and Service Not connected. Pod die, Service stay. Pod load balancer. Ingress Route traffic into cluster(Internal Service). ConfigMap External config of your application. Secret Used to store secret data. Base64 encoded. Volumes Data persistence of pod. Mount a physical storage to the pod. Replica Exist on other node connect to the same service. Deployment A layer of abstraction on pods. Stateless applications. Blueprint for app pods. Specify the replica numbers. Can\u0026rsquo;t replicate database because it\u0026rsquo;s stateful. StatefulSet For stateful apps like MySQL, Elasticsearch. ","date":"2024-10-13","id":1,"permalink":"/en/cloud/k8s/intro/","summary":"\u003ch2 id=\"why-k8s\"\u003eWHY K8S\u003c/h2\u003e\n\u003cp\u003eIn micro services, there are tons of container need to be host.\nWe can\u0026rsquo;t do this by home make script and tools.\nSo we need a container Orchestration tool.\nThat is Kubernetes which offers the following features.\u003c/p\u003e","tags":[],"title":"Introduction"},{"content":"Node Processes Worker Nodes Each Node has multiple Pods on it. Worker Nodes do the actual work. Need more resources(CPU/Memory). 3 processes must be installed on each Node: Container Runtime e.g. Docker/Podman kubelet Communicate with Master Node. Do the actual work Scheduling Pods kube-proxy Network proxy/rules Master Node Cluster Interface. Less resources than Worker Nodes. 4 processes must be installed on each Node: Api Server Cluster gateway Gatekeeper for authentication Client: UI/API/CLI Scheduler Scheduling pods by resource availability Controller Manager Maintains the state of the cluster. Detects and responds to node failure. Request kubelet to restart failed Pods. Etcd Distributed key-value store. Store the state of the cluster. Kubectl Command line tool for Kubernetes. Get Version kubectl client version and k8s server version.\nkubectl version\rGet Nodes kubectl get nodes\rNAME STATUS ROLES AGE VERSION node1 Ready master 10d v1.20.0 node2 Ready worker 10d v1.20.0\rBasic Kubectl Commands Create and debug Pods in Kubernetes.\nCreate Deployment kubectl create deployment my-nginx --image=nginx [--dry-run]\rGet Deployment kubectl get deployments\rNAME READY UP-TO-DATE AVAILABLE AGE my-nginx 1/1 1 1 10s\rGet Pods kubectl get pods\rNAME READY STATUS RESTARTS AGE my-nginx-6d4b94b94-2s222 1/1 Running 0 10s\rGet ReplicaSet Manage by Deployment.\nkubectl get replicasets\rNAME DESIRED CURRENT READY AGE my-nginx-6d4b94b94 1 1 1 10s\rPod name include 3 parts:\nmy-nginx is Deployment name. 6d4b94b94 is ReplicaSet ID. 2s222 is Pod ID. Layers of Abstraction:\nDeployment manages a ReplicaSet. ReplicaSet manages Pods. Pod is an abstraction of a container. Container is runtime of an image. Edit Deployment Change the image version to nginx:1.21.\nkubectl edit deployment my-nginx\rThe old pod will be terminated and a new pod will be created. The replicaset will have two versions. Pod Logs kubectl logs my-nginx-6d4b94b94-2s222\rPod State Get pod status/events.\nkubectl describe pod my-nginx-6d4b94b94-2s222\rEvent Age From Message Scheduled 10s default-scheduler Assigned to a node. Pulling 5s kubelet,minikube Pulling image. Pulled 5s kubelet,minikube Pulled image. Created 3s kubelet,minikube Created container. Started 2s kubelet,minikube Started container. Enter Pod kubectl exec -it my-nginx-6d4b94b94-2s222 -- /bin/bash\rDelete Deployment kubectl delete deployment my-nginx\rApply Deployment kubectl apply -f nginx-deployment.yaml\rkubectl delete -f nginx-deployment.yaml\rConfiguration File 3 Parts of configration file Connecting Deployments to Service to Pods Demo apiVersion: apps/v1 kind: Deployment metadata: name: my-nginx labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.21 ports: - containerPort: 80\r3 Parts of configration file Metadata Specification Status Status is automatically generated by Kubernetes.\nCompoare Desired State(Spec) and Actual State(Etcd) Rollout new changes Template(Blueprint for Pods) Template is used to create Pods Has own metadta and spec label/name/image/port Connecting Components Labels \u0026amp; Selectors \u0026amp; Ports\n","date":"2024-10-13","id":2,"permalink":"/en/cloud/k8s/arch/","summary":"\u003ch2 id=\"node-processes\"\u003eNode Processes\u003c/h2\u003e\n\u003ch3 id=\"worker-nodes\"\u003eWorker Nodes\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eEach Node has multiple Pods on it.\u003c/li\u003e\n\u003cli\u003eWorker Nodes do the actual work.\u003c/li\u003e\n\u003cli\u003eNeed more resources(CPU/Memory).\u003c/li\u003e\n\u003cli\u003e3 processes must be installed on each Node:\n\u003cul\u003e\n\u003cli\u003eContainer Runtime\n\u003cul\u003e\n\u003cli\u003ee.g. Docker/Podman\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ekubelet\n\u003cul\u003e\n\u003cli\u003eCommunicate with Master Node.\u003c/li\u003e\n\u003cli\u003eDo the actual work\u003c/li\u003e\n\u003cli\u003eScheduling Pods\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ekube-proxy\n\u003cul\u003e\n\u003cli\u003eNetwork proxy/rules\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"master-node\"\u003eMaster Node\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCluster Interface.\u003c/li\u003e\n\u003cli\u003eLess resources than Worker Nodes.\u003c/li\u003e\n\u003cli\u003e4 processes must be installed on each Node:\n\u003cul\u003e\n\u003cli\u003eApi Server\n\u003cul\u003e\n\u003cli\u003eCluster gateway\u003c/li\u003e\n\u003cli\u003eGatekeeper for authentication\u003c/li\u003e\n\u003cli\u003eClient: UI/API/CLI\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eScheduler\n\u003cul\u003e\n\u003cli\u003eScheduling pods by resource availability\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eController Manager\n\u003cul\u003e\n\u003cli\u003eMaintains the state of the cluster.\u003c/li\u003e\n\u003cli\u003eDetects and responds to node failure.\u003c/li\u003e\n\u003cli\u003eRequest kubelet to restart failed Pods.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEtcd\n\u003cul\u003e\n\u003cli\u003eDistributed key-value store.\u003c/li\u003e\n\u003cli\u003eStore the state of the cluster.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kubectl\"\u003eKubectl\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCommand line tool for Kubernetes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"get-version\"\u003eGet Version\u003c/h3\u003e\n\u003cp\u003ekubectl client version and k8s server version.\u003c/p\u003e","tags":[],"title":"Architecture"},{"content":"","date":"2024-10-13","id":3,"permalink":"/en/cloud/","summary":"","tags":[],"title":"Cloud Native"},{"content":"","date":"2024-10-13","id":4,"permalink":"/en/cloud/k8s/","summary":"","tags":[],"title":"Kubernetes"},{"content":"","date":"2024-10-13","id":5,"permalink":"/en/","summary":"","tags":[],"title":"NOTES"},{"content":"","date":"0001-01-01","id":6,"permalink":"/en/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":7,"permalink":"/en/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":8,"permalink":"/en/tags/","summary":"","tags":[],"title":"Tags"}]